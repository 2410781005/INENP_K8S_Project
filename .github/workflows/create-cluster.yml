name: Deploy Exoscale SKS with OpenTofu

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Run OpenTofu
    runs-on: ubuntu-latest

    env:
      EXOSCALE_API_KEY: ${{ secrets.EXOSCALE_API_KEY }}
      EXOSCALE_API_SECRET: ${{ secrets.EXOSCALE_API_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: latest

      - name: Show OpenTofu version
        run: tofu version

      - name: Init OpenTofu
        run: |
          tofu init \
            -backend-config="access_key=${{ secrets.EXOSCALE_API_KEY }}" \
            -backend-config="secret_key=${{ secrets.EXOSCALE_API_SECRET }}" \
            -var="exoscale_key=${{ secrets.EXOSCALE_API_KEY }}" \
            -var="exoscale_secret=${{ secrets.EXOSCALE_API_SECRET }}"

      - name: Validate OpenTofu config
        run: |
          tofu plan \
            -var="exoscale_key=${{ secrets.EXOSCALE_API_KEY }}" \
            -var="exoscale_secret=${{ secrets.EXOSCALE_API_SECRET }}"

      - name: Apply OpenTofu configuration
        run: |
          tofu apply -auto-approve \
            -var="exoscale_key=${{ secrets.EXOSCALE_API_KEY }}" \
            -var="exoscale_secret=${{ secrets.EXOSCALE_API_SECRET }}"

      - name: Print generated kubeconfig
        run: |
          echo "Generated kubeconfig content:"
          cat ./kubeconfig

      - name: Set KUBECONFIG environment variable
        run: |
          ENCODED_KUBECONFIG=$(cat kubeconfig | base64 -w 0)
          echo "ENCODED_KUBECONFIG=$ENCODED_KUBECONFIG" >> $GITHUB_ENV

      - name: Update GitHub Secret
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
          KUBECONFIG_SECRET_NAME: EXOSCALE_KUBECONFIG
        run: |
          # Rufe die GitHub API auf, um das Secret zu aktualisieren
          # Installiere `gh` CLI, wenn noch nicht verfügbar (standardmäßig auf GitHub-Runnern)
          gh secret set $KUBECONFIG_SECRET_NAME --body "${{ env.ENCODED_KUBECONFIG }}"

          echo "GitHub Secret '$KUBECONFIG_SECRET_NAME' wurde erfolgreich aktualisiert."

      - name: Deploy OAUTH and API-GATEWAY Kubernetes
        run: |
          mkdir -p $HOME/.kube
          cp ./kubeconfig $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          kubectl apply -f oauth-proxy/
          kubectl apply -f api-gateway/
