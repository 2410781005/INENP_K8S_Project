name: Deploy Exoscale SKS with OpenTofu

on:
  workflow_dispatch:

jobs:
  deploy:
    name: Run OpenTofu
    runs-on: ubuntu-latest

    env:
      EXOSCALE_API_KEY: ${{ secrets.EXOSCALE_API_KEY }}
      EXOSCALE_API_SECRET: ${{ secrets.EXOSCALE_API_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: latest

      - name: Show OpenTofu version
        run: tofu version

      - name: Init OpenTofu
        run: |
          tofu init \
            -backend-config="access_key=${EXOSCALE_API_KEY}" \
            -backend-config="secret_key=${EXOSCALE_API_SECRET}"

      - name: Validate OpenTofu config
        run: |
          tofu plan

      - name: Apply OpenTofu configuration
        run: |
          tofu apply -auto-approve

      - name: Set KUBECONFIG environment variable
        run: |
          KUBECONFIG_PATH="KUBECONFIG"
          if [ ! -f "$KUBECONFIG_PATH" ]; then
            echo "Error: Kubeconfig file not found at $KUBECONFIG_PATH"
            exit 1
          fi
          echo "KUBECONFIG=$KUBECONFIG_PATH" >> $GITHUB_ENV
          echo "KUBECONFIG successfully downloaded and set."
          ENCODED_KUBECONFIG=$(echo -n "$KUBECONFIG_PATH" | base64 -w 0)
          echo "ENCODED_KUBECONFIG=$ENCODED_KUBECONFIG" >> $GITHUB_ENV

      - name: Update GitHub Secret
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
          KUBECONFIG_SECRET_NAME: EXOSCLAE_KUBECONFIG
        run: |
          # Rufe die GitHub API auf, um das Secret zu aktualisieren
          # Installiere `gh` CLI, wenn noch nicht verfügbar (standardmäßig auf GitHub-Runnern)
          gh secret set $KUBECONFIG_SECRET_NAME --body "${{ env.ENCODED_KUBECONFIG }}"

          echo "GitHub Secret '$KUBECONFIG_SECRET_NAME' wurde erfolgreich aktualisiert."
